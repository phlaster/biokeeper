services:

# AUTH MICROSERICE
  auth_db:
    container_name: biokeeper_auth_db
    image: postgres:latest
    env_file:
      - biokeeper-auth/.db.env
    volumes:
      # Database
      - ./biokeeper-auth/database/data:/var/lib/postgresql/data
      # Init scripts
      - ./biokeeper-auth/database/init_scripts:/docker-entrypoint-initdb.d
      # Sync time with host machine
      - /etc/localtime:/etc/localtime:ro
    restart: always
    ports:
      - 127.0.0.1:5555:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U biokeeper_auth -d auth_db'"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - internal_net

  auth_backend:
    container_name: biokeep_auth_backend
    build:
      context: biokeeper-auth/
    env_file:
      - biokeeper-auth/.db.env
      - jwt_keys/.jwt.private.env
      - jwt_keys/.jwt.public.env
      - biokeeper-auth/.rtoken.salt.env
      - ./biokeeper-mq/env_files/.auth_user.env
      - ./.docs.password.env
    environment:
      - POSTGRES_HOST=auth_db
      - POSTGRES_PORT=5432
      - DOCKER_CONTAINER=YES
    depends_on:
      auth_db:
        condition: service_healthy
      # mq:
      #   condition: service_healthy
    restart: always
    ports:
      - 1337:8000
    networks:
      - internal_net



# BACKEND MICROSERICE
  core_backend:
    container_name: core_backend
    build: ./biokeeper-backend
    restart: always
    ports:
      - 8006:1337
    volumes:
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - jwt_keys/.jwt.public.env
      - ./.docs.password.env
      - ./biokeeper-mq/env_files/.core_user.env
    networks:
      internal_net:
        ipv4_address: 172.30.0.10
    depends_on:
      mq:
        condition: service_healthy



  core_db:
    container_name: core_db
    restart: always

    environment:
      - POSTGRES_PASSWORD=root
    image: postgres
    volumes:
      # DB initialization scripts
      - ./biokeeper-backend/postgres/init_scripts:/docker-entrypoint-initdb.d
      
      # Expose DB data folder to host machine
      - ./biokeeper-backend/postgres/data/:/var/lib/postgresql/data/

      # Sync time with host machine
      - /etc/localtime:/etc/localtime:ro
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - 127.0.0.1:5556:5432
    networks:
      - internal_net

# RabbitMQ
  mq:
    container_name: biokeeper_mq
    build: 
      context: ./biokeeper-mq
    restart: always
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./biokeeper-mq/rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - ./biokeeper-mq/env_files/.auth_user.env
      - ./biokeeper-mq/env_files/.core_user.env
      - ./biokeeper-mq/env_files/.default_user.env
    networks:
      - internal_net
    healthcheck:
      test: ["CMD", "/scripts/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3


# ADMIN PANEL
  admin:
    container_name: biokeeper_admin
    build: 
      context: ./biokeeper-admin
    ports:
      - 127.0.0.1:8666:80
    restart: always
    
networks:
  internal_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16